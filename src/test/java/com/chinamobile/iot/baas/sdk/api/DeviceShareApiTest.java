/*
 * 轻应用Baas平台API
 * demo
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.chinamobile.iot.baas.sdk.api;

import com.chinamobile.iot.baas.sdk.ApiException;
import com.chinamobile.iot.baas.sdk.model.AddDeviceShares;
import com.chinamobile.iot.baas.sdk.model.FindDeviceSharesRsp;
import com.chinamobile.iot.baas.sdk.model.PageInfoDeviceSharesDTO;
import com.chinamobile.iot.baas.sdk.model.ShareIdResponse;
import org.junit.Ignore;
import org.junit.Assert;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.junit.Before;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeviceShareApi
 */
@Ignore
public class DeviceShareApiTest {

    private String accessId = "";
    private String accessKey = "";
    private static Logger logger = LoggerFactory.getLogger(DeviceShareApiTest.class);
    private String sessionToken;
    private String appToken = "";
    private String basePath = "http://demo.heclouds.com/baasapi";

    private final DeviceShareApi api = new DeviceShareApi(basePath,accessId,accessKey);

      @Before
        public void getSessionToken(){
            AuthApi authApi = new AuthApi(basePath,accessId,accessKey);
            String loginName = "";
            String password = "";
            try {
                sessionToken = authApi.loginPostSessionToken(appToken, loginName, password);
                logger.info("获取sessionToken成功,session-token： "+sessionToken);
            }catch (Exception e){
                logger.error("获取sessionToken失败： "+e.getMessage());
            }
        }

    
    /**
     * 新增设备分享信息
     *
     * 新增设备分享信息
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addDeviceSharesUsingPOSTTest() throws ApiException {
        AddDeviceShares request = null;
        ShareIdResponse response = api.addDeviceSharesUsingPOST(request,sessionToken);

        // TODO: test validations
    }
    
    /**
     * 收回设备分享
     *
     * 收回设备分享
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDeviceSharesUsingDELETETest() throws ApiException {
        Integer shareId = null;
        api.deleteDeviceSharesUsingDELETE(shareId,sessionToken);

        // TODO: test validations
    }
    
    /**
     * 查询分享出去的设备列表
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeviceShareOthersUsingGETTest() throws ApiException {
        String deviceId = null;
        String toUserLoginName = null;
        String toUserUserName = null;
        String startDate = null;
        String endDate = null;
        String pageNum = null;
        String pageSize = null;
        PageInfoDeviceSharesDTO response = api.getDeviceShareOthersUsingGET(sessionToken,deviceId,toUserLoginName,toUserUserName,startDate,endDate,pageNum,pageSize);

        // TODO: test validations
    }
    
    /**
     * 查询分享给自己的设备列表
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeviceShareSelfUsingGETTest() throws ApiException {
        String deviceId = null;
        String fromUserLoginName = null;
        String fromUserUserName = null;
        String startDate = null;
        String endDate = null;
        String pageNum = null;
        String pageSize = null;
        PageInfoDeviceSharesDTO response = api.getDeviceShareSelfUsingGET(sessionToken,deviceId,fromUserLoginName,fromUserUserName,startDate,endDate,pageNum,pageSize);

        // TODO: test validations
    }
    
    /**
     * 查询设备分享信息
     *
     * 查询设备分享信息
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeviceSharesByIdUsingGETTest() throws ApiException {
        Integer shareId = null;
        FindDeviceSharesRsp response = api.getDeviceSharesByIdUsingGET(shareId,sessionToken);

        // TODO: test validations
    }
    
    /**
     * 查询设备分享信息列表(仅超管可用)
     *
     * 查询设备分享信息列表(仅超管可用)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeviceSharesListUsingGETTest() throws ApiException {
        String deviceId = null;
        String fromUserLoginName = null;
        String toUserLoginName = null;
        String startDate = null;
        String endDate = null;
        String pageNum = null;
        String pageSize = null;
        PageInfoDeviceSharesDTO response = api.getDeviceSharesListUsingGET(sessionToken,deviceId,fromUserLoginName,toUserLoginName,startDate,endDate,pageNum,pageSize);

        // TODO: test validations
    }
    
}
