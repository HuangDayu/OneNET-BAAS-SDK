/*
 * 轻应用Baas平台API
 * demo
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.chinamobile.iot.baas.sdk.api;

import com.chinamobile.iot.baas.sdk.ApiCallback;
import com.chinamobile.iot.baas.sdk.ApiClient;
import com.chinamobile.iot.baas.sdk.ApiException;
import com.chinamobile.iot.baas.sdk.ApiResponse;
import com.chinamobile.iot.baas.sdk.Configuration;
import com.chinamobile.iot.baas.sdk.Pair;
import com.chinamobile.iot.baas.sdk.ProgressRequestBody;
import com.chinamobile.iot.baas.sdk.ProgressResponseBody;
import com.chinamobile.iot.baas.sdk.SignatureUtil;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.chinamobile.iot.baas.sdk.model.CustomPermission;
import com.chinamobile.iot.baas.sdk.model.PageInfoCustomPermission;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CustomPermissionApi {
    private ApiClient apiClient;

    public CustomPermissionApi(String basePath,String accessId,String accessKey) {
        this(Configuration.getDefaultApiClient(basePath,accessId,accessKey));
    }

    public CustomPermissionApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for findCustomPermissionByUserUsingGET
     * @param sessionToken session-token (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call findCustomPermissionByUserUsingGETCall(String sessionToken, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1.0/extraPermissions/user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String,Object> params = new HashMap<>();


        String authCode = "";
        try {
            authCode = SignatureUtil.signature(apiClient.getAccessId(), apiClient.getAccessKey(),"GET",params);
        } catch (Exception e) {
            e.printStackTrace();
        }


        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (sessionToken != null)
        localVarHeaderParams.put("session-token", apiClient.parameterToString(sessionToken));


        localVarHeaderParams.put("authCode", authCode);


        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call findCustomPermissionByUserUsingGETValidateBeforeCall(String sessionToken, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'sessionToken' is set
        if (sessionToken == null) {
            throw new ApiException("Missing the required parameter 'sessionToken' when calling findCustomPermissionByUserUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = findCustomPermissionByUserUsingGETCall(sessionToken, progressListener, progressRequestListener);
        return call;

    }

    /**
     * 查询当前用户拥有的自定义权限
     * 查询当前用户拥有的自定义权限
     * @param sessionToken session-token (required)
     * @return List&lt;CustomPermission&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<CustomPermission> findCustomPermissionByUserUsingGET(String sessionToken) throws ApiException {
        ApiResponse<List<CustomPermission>> resp = findCustomPermissionByUserUsingGETWithHttpInfo(sessionToken);
        return resp.getData();
    }

    /**
     * 查询当前用户拥有的自定义权限
     * 查询当前用户拥有的自定义权限
     * @param sessionToken session-token (required)
     * @return ApiResponse&lt;List&lt;CustomPermission&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<CustomPermission>> findCustomPermissionByUserUsingGETWithHttpInfo(String sessionToken) throws ApiException {
        com.squareup.okhttp.Call call = findCustomPermissionByUserUsingGETValidateBeforeCall(sessionToken, null, null);
        Type localVarReturnType = new TypeToken<List<CustomPermission>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询当前用户拥有的自定义权限 (asynchronously)
     * 查询当前用户拥有的自定义权限
     * @param sessionToken session-token (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call findCustomPermissionByUserUsingGETAsync(String sessionToken, final ApiCallback<List<CustomPermission>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = findCustomPermissionByUserUsingGETValidateBeforeCall(sessionToken, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<CustomPermission>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for findCustomPermissionUsingGET
     * @param sessionToken session-token (required)
     * @param customPermissionId 自定义权限的id（不支持模糊查询） (optional)
     * @param customPermissionName 自定义权限名 (optional)
     * @param pageNum 页数 (optional)
     * @param pageSize 每页条数 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call findCustomPermissionUsingGETCall(String sessionToken, String customPermissionId, String customPermissionName, String pageNum, String pageSize, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1.0/extraPermissions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

       if (customPermissionId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("customPermissionId", customPermissionId));

       if (customPermissionName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("customPermissionName", customPermissionName));

       if (pageNum != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pageNum", pageNum));

       if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("pageSize", pageSize));

        Map<String,Object> params = new HashMap<>();

       if (customPermissionId != null)
        params.put("customPermissionId",customPermissionId);
       if (customPermissionName != null)
        params.put("customPermissionName",customPermissionName);
       if (pageNum != null)
        params.put("pageNum",pageNum);
       if (pageSize != null)
        params.put("pageSize",pageSize);

        String authCode = "";
        try {
            authCode = SignatureUtil.signature(apiClient.getAccessId(), apiClient.getAccessKey(),"GET",params);
        } catch (Exception e) {
            e.printStackTrace();
        }


        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (sessionToken != null)
        localVarHeaderParams.put("session-token", apiClient.parameterToString(sessionToken));


        localVarHeaderParams.put("authCode", authCode);


        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call findCustomPermissionUsingGETValidateBeforeCall(String sessionToken, String customPermissionId, String customPermissionName, String pageNum, String pageSize, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'sessionToken' is set
        if (sessionToken == null) {
            throw new ApiException("Missing the required parameter 'sessionToken' when calling findCustomPermissionUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = findCustomPermissionUsingGETCall(sessionToken, customPermissionId, customPermissionName, pageNum, pageSize, progressListener, progressRequestListener);
        return call;

    }

    /**
     * 查询自定义权限
     * 查询自定义权限
     * @param sessionToken session-token (required)
     * @param customPermissionId 自定义权限的id（不支持模糊查询） (optional)
     * @param customPermissionName 自定义权限名 (optional)
     * @param pageNum 页数 (optional)
     * @param pageSize 每页条数 (optional)
     * @return PageInfoCustomPermission
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PageInfoCustomPermission findCustomPermissionUsingGET(String sessionToken, String customPermissionId, String customPermissionName, String pageNum, String pageSize) throws ApiException {
        ApiResponse<PageInfoCustomPermission> resp = findCustomPermissionUsingGETWithHttpInfo(sessionToken, customPermissionId, customPermissionName, pageNum, pageSize);
        return resp.getData();
    }

    /**
     * 查询自定义权限
     * 查询自定义权限
     * @param sessionToken session-token (required)
     * @param customPermissionId 自定义权限的id（不支持模糊查询） (optional)
     * @param customPermissionName 自定义权限名 (optional)
     * @param pageNum 页数 (optional)
     * @param pageSize 每页条数 (optional)
     * @return ApiResponse&lt;PageInfoCustomPermission&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PageInfoCustomPermission> findCustomPermissionUsingGETWithHttpInfo(String sessionToken, String customPermissionId, String customPermissionName, String pageNum, String pageSize) throws ApiException {
        com.squareup.okhttp.Call call = findCustomPermissionUsingGETValidateBeforeCall(sessionToken, customPermissionId, customPermissionName, pageNum, pageSize, null, null);
        Type localVarReturnType = new TypeToken<PageInfoCustomPermission>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询自定义权限 (asynchronously)
     * 查询自定义权限
     * @param sessionToken session-token (required)
     * @param customPermissionId 自定义权限的id（不支持模糊查询） (optional)
     * @param customPermissionName 自定义权限名 (optional)
     * @param pageNum 页数 (optional)
     * @param pageSize 每页条数 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call findCustomPermissionUsingGETAsync(String sessionToken, String customPermissionId, String customPermissionName, String pageNum, String pageSize, final ApiCallback<PageInfoCustomPermission> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = findCustomPermissionUsingGETValidateBeforeCall(sessionToken, customPermissionId, customPermissionName, pageNum, pageSize, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PageInfoCustomPermission>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
